// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Client {
  id String @id @default(cuid())
  clientName String @unique
  clientEmail String @unique
  clientPhone String @unique
  clientAddress Address?
  invoices Invoice[]

  @@map("clients")
}

model Address {
  id String @id @default(cuid())
  street String
  city String
  postalCode String
  country String
  clientId String @unique
  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@map("addresses")
}

model Invoice {
  id String @id @default(cuid())
  invoiceReference String @unique
  description String
  status InvoiceStatus
  invoiceDate DateTime
  dueDate DateTime
  totalAmount Float
  clientId String
  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)
  invoiceItems InvoiceItem[]
}

model InvoiceItem {
  id String @id @default(cuid())
  name String
  description String?
  quantity Int
  unitPrice Float
  invoiceId String
  invoice Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
}

enum InvoiceStatus {
  PENDING
  PAID
  OVERDUE
}